{"version":3,"sources":["store/modules/todos.js","components/FilteredTodoList/Todo.js","components/FilteredTodoList/TodoList.js","store/modules/filters.js","components/FilteredTodoList/index.js","components/CreateTodo/index.js","components/UpdateFilter/index.js","components/App.js","serviceWorker.js","store/modules/index.js","index.js"],"names":["TODOS_ACTION","CREATE","UPDATE_STATE","UPDATE_TEXT","DELETE","TODOS_STATE","TODO","DONE","PEND","todoId","createTodo","payload","type","date","Date","now","state","updateTodo","text","Todo","todo","id","dispatchUpdate","getFullYear","getMonth","getDate","getHours","className","onClick","TodoList","todos","todoEls","key","push","FILTERS_ACTION","CHANGE_STATE","CHANGE_DATE","RESET_FILTER","FILTERS_STATE","STATE","ALL","DATE","DAY_THIS","WEEK_THIS","MONTH_THIS","defaultFilter","updateFilter","resetFilter","FilteredTodoList","filteredTodos","useSelector","filters","Object","keys","filter","map","dispatch","useDispatch","updateText","CreatTodo","onSubmit","e","preventDefault","dispatchCreateTodo","value","ref","node","UpdateFilter","reset","elms","element","toLowerCase","name","checked","onChange","App","Boolean","window","location","hostname","match","combineReducers","action","newState","object","theStore","createStore","rootReducer","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1d66aba3.chunk.js","sourcesContent":["export const TODOS_ACTION = {\r\n  CREATE: 'todo/CREATE',\r\n  UPDATE_STATE: 'todo/UPDATE_STATE',\r\n  UPDATE_TEXT: 'todo/UPDATE_TEXT',\r\n  DELETE: 'todo/DELETE'\r\n}\r\nexport const TODOS_STATE = {\r\n  TODO: 'TODO',\r\n  DONE: 'DONE',\r\n  PEND: 'PEND',\r\n}\r\n\r\nlet todoId = 0\r\n\r\n\r\n\r\nexport const createTodo = payload => ({\r\n  type: TODOS_ACTION.CREATE,\r\n  todoId: todoId++,\r\n  date: Date.now(),\r\n  state: TODOS_STATE.TODO,\r\n  payload\r\n})\r\nexport const updateTodo = {\r\n  state: (todoId, payload) => ({ type: TODOS_ACTION.UPDATE_STATE, todoId, payload }),\r\n  text: (todoId, payload) => ({ type: TODOS_ACTION.UPDATE_TEXT, todoId, payload })\r\n}\r\nexport const deleteTodo = todoId => ({ type: TODOS_ACTION.DELETE, todoId })\r\n\r\n\r\n\r\nexport default function todos(state = {}, action) {\r\n\r\n  const newState = object => ({ ...state, [action.todoId]: object })\r\n\r\n  switch (action.type) {\r\n    case TODOS_ACTION.CREATE:\r\n      return newState({\r\n        id: action.todoId,\r\n        date: action.date,\r\n        state: action.state,\r\n        text: action.payload\r\n      })\r\n    case TODOS_ACTION.UPDATE_STATE:\r\n      return newState({\r\n        ...state[action.todoId],\r\n        state: action.payload\r\n      })\r\n    case TODOS_ACTION.UPDATE_TEXT:\r\n      return newState({\r\n        ...state[action.todoId],\r\n        text: action.payload\r\n      })\r\n    case TODOS_ACTION.DELETE:\r\n      const { [action.todoId]: removedTodo, ...remainedTodo } = state\r\n      return { ...remainedTodo }\r\n    default:\r\n      return state;\r\n  }\r\n}","import React from 'react'\r\nimport { TODOS_STATE } from '../../store/modules/todos'\r\n\r\nconst Todo = ({ todo: { id, date, state, text }, dispatchUpdate }) => {\r\n  date = new Date(date);\r\n  date = `${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()} ${date.getHours()}ì‹œ`\r\n  return (\r\n    <li className=\"todo-item\"\r\n      onClick={() => {\r\n        switch (state) {\r\n          case TODOS_STATE.TODO:\r\n            dispatchUpdate.state.DONE(id);\r\n            break;\r\n          case TODOS_STATE.DONE:\r\n            dispatchUpdate.state.TODO(id);\r\n            break;\r\n          default: break;\r\n        }\r\n      }}\r\n    >\r\n      <div className=\"todo-item-date\">{date}</div>\r\n      <div className=\"todo-item-text\">{text}</div>\r\n      <div className=\"todo-item-state\">{state}</div>\r\n    </li >\r\n  )\r\n}\r\n\r\nexport default Todo","import React from 'react'\r\nimport Todo from './Todo'\r\n\r\nconst TodoList = ({ todos, dispatchUpdate }) => (\r\n  <ul className=\"todo-list\">\r\n    {\r\n      (() => {\r\n        const todoEls = []\r\n        for (const key in todos)\r\n          todoEls.push(<Todo key={key} todo={todos[key]} dispatchUpdate={dispatchUpdate} />);\r\n        return todoEls\r\n      })()\r\n    }\r\n  </ul>\r\n)\r\n\r\nexport default TodoList","import { TODOS_STATE } from './todos'\r\n\r\n\r\n\r\nexport const FILTERS_ACTION = {\r\n  CHANGE_STATE: 'filters/CHANGE_STATE',\r\n  CHANGE_DATE: 'filters/CHANGE_DATE',\r\n  RESET_FILTER: 'filters/RESET_FILTER',\r\n}\r\nexport const FILTERS_STATE = {\r\n  STATE: {\r\n    ALL: 'ALL',\r\n    ...TODOS_STATE\r\n  },\r\n  DATE: {\r\n    ALL: 'ALL',\r\n    DAY_THIS: 'DAY_THIS',\r\n    WEEK_THIS: 'WEEK_THIS',\r\n    MONTH_THIS: 'MONTH_THIS'\r\n  }\r\n}\r\nconst defaultFilter = {\r\n  state: FILTERS_STATE.STATE.ALL,\r\n  date: FILTERS_STATE.DATE.ALL\r\n}\r\n\r\n\r\n\r\nexport const updateFilter = {\r\n  state: payload => ({ type: FILTERS_ACTION.CHANGE_STATE, payload }),\r\n  date: payload => ({ type: FILTERS_ACTION.CHANGE_DATE, payload })\r\n}\r\nexport const resetFilter = () => ({ type: FILTERS_ACTION.RESET_FILTER, payload: defaultFilter })\r\n\r\n\r\n\r\nexport default function filters(state = defaultFilter, action) {\r\n  switch (action.type) {\r\n    case FILTERS_ACTION.CHANGE_STATE:\r\n      return { ...state, state: action.payload }\r\n    case FILTERS_ACTION.CHANGE_DATE:\r\n      return { ...state, date: action.payload }\r\n    case FILTERS_ACTION.RESET_FILTER:\r\n      return defaultFilter;\r\n    default:\r\n      return state;\r\n  }\r\n}","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport TodoList from './TodoList'\r\nimport { FILTERS_STATE } from '../../store/modules/filters'\r\nimport { updateTodo, TODOS_STATE } from '../../store/modules/todos'\r\n\r\nconst { STATE } = FILTERS_STATE\r\n\r\nexport default function FilteredTodoList() {\r\n  const [filters, todos] = useSelector(({ filters, todos }) => [filters, todos]);\r\n  let filteredTodos;\r\n\r\n  switch (filters.state) {\r\n    case STATE.TODO:\r\n    case STATE.DONE:\r\n    case STATE.PEND:\r\n      filteredTodos = Object.keys(todos)\r\n        .filter(key => todos[key].state === filters.state)\r\n        .map(key => todos[key])\r\n      break;\r\n    default: filteredTodos = { ...todos };\r\n  }\r\n\r\n  const dispatch = useDispatch();\r\n  const dispatchUpdate = {\r\n    state: {\r\n      TODO: (todoId) => dispatch(updateTodo.state(todoId, TODOS_STATE.TODO)),\r\n      DONE: (todoId) => dispatch(updateTodo.state(todoId, TODOS_STATE.DONE)),\r\n      PEND: (todoId) => dispatch(updateTodo.state(todoId, TODOS_STATE.PEND))\r\n    },\r\n    updateText: (todoId, payload) => dispatch(updateTodo.text(todoId, payload))\r\n  }\r\n\r\n  return (\r\n    <TodoList todos={filteredTodos} dispatchUpdate={dispatchUpdate}></TodoList>\r\n  )\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { createTodo } from '../../store/modules/todos'\r\n\r\nexport default function CreatTodo() {\r\n  const dispatch = useDispatch()\r\n  const dispatchCreateTodo = payload => dispatch(createTodo(payload))\r\n  let payload;\r\n\r\n  return (\r\n    <form className=\"todo-create\"\r\n      onSubmit={e => {\r\n        e.preventDefault()\r\n        dispatchCreateTodo(payload.value)\r\n      }}\r\n    >\r\n      <input className=\"todo-create-text\"\r\n        type=\"text\"\r\n        ref={node => payload = node}\r\n      />\r\n      <button type=\"submit\">submit</button>\r\n    </form>\r\n  )\r\n}","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { FILTERS_STATE, resetFilter, updateFilter } from '../../store/modules/filters'\r\n\r\nexport default function UpdateFilter() {\r\n  const filters = useSelector(({ filters }) => { return { ...filters } })\r\n  const dispatch = useDispatch()\r\n  const dispatchUpdate = {\r\n    reset: () => dispatch(resetFilter()),\r\n    ALL: () => dispatch(updateFilter.state(FILTERS_STATE.STATE.ALL)),\r\n    TODO: () => dispatch(updateFilter.state(FILTERS_STATE.STATE.TODO)),\r\n    DONE: () => dispatch(updateFilter.state(FILTERS_STATE.STATE.DONE)),\r\n    PEND: () => dispatch(updateFilter.state(FILTERS_STATE.STATE.PEND))\r\n  }\r\n\r\n  return (\r\n    <form className=\"todo-filter\">\r\n      {(() => {\r\n        const elms = [];\r\n        for (const key in FILTERS_STATE.STATE) {\r\n          const element = FILTERS_STATE.STATE[key];\r\n          elms.push(\r\n            <label key={element} className={`todo-filter-${element.toLowerCase()}`}>\r\n              <input\r\n                type='radio'\r\n                name='todo-filter'\r\n                value={element}\r\n                checked={filters.state === element}\r\n                onChange={() => dispatchUpdate[element]()}\r\n              />\r\n              {element}\r\n            </label>\r\n          )\r\n        }\r\n        return elms\r\n      })()}\r\n    </form>\r\n  )\r\n}","import React from \"react\";\r\nimport FilteredTodoList from \"./FilteredTodoList\";\r\nimport CreateTodo from \"./CreateTodo\"\r\nimport UpdateFilter from \"./UpdateFilter\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <CreateTodo />\r\n      <FilteredTodoList />\r\n      <UpdateFilter />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {combineReducers} from 'redux'\r\nimport todos from './todos'\r\nimport filters from'./filters'\r\n\r\nexport default combineReducers({\r\n  filters,\r\n  todos\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from \"./store/modules\"\n\nimport { createTodo } from './store/modules/todos'\n\nconst theStore = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__\n  && window.__REDUX_DEVTOOLS_EXTENSION__()\n)\n\ntheStore.dispatch(createTodo(\"hello\"))\ntheStore.dispatch(createTodo(\"world\"))\ntheStore.dispatch(createTodo(\"of\"))\ntheStore.dispatch(createTodo(\"redux\"))\n\nReactDOM.render(\n  <Provider store={theStore}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}